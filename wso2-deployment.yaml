apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2is
  labels:
    app: wso2is
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wso2is
  template:
    metadata:
      labels:
        app: wso2is
    spec:
      # ------> ADD THIS SECTION <------
      securityContext:
        # This ensures the volume mount point's group ownership
        # is set to 1000, allowing the container process (if running
        # as GID 1000) to write to it.
        fsGroup: 1000
      # ---------------------------------
      # ------> ADD THIS INIT CONTAINER SECTION <------
      initContainers:
      - name: init-wso2is-db        # Name for the init container
        image: wso2/wso2is:7.0.0-alpine # Use the same WSO2 IS image
        # This command checks if the main DB file exists in the volume.
        # If not, it copies the initial *.mv.db files from the image's default location.
        command: ['sh', '-c']
        args:
          - |
            DB_VOLUME_PATH="/mnt/db"
            DB_FILE_CHECK="${DB_VOLUME_PATH}/WSO2CARBON_DB.mv.db"
            IMAGE_DB_PATH="/home/wso2carbon/wso2is-7.0.0/repository/database"

            echo "Checking for initial DB file at ${DB_FILE_CHECK}..."
            if [ ! -f "${DB_FILE_CHECK}" ]; then
              echo "Initial DB files not found in volume. Copying from ${IMAGE_DB_PATH}..."
              # Copy only the main H2 database files
              cp ${IMAGE_DB_PATH}/*.mv.db "${DB_VOLUME_PATH}/"
              echo "Copy complete."
            else
              echo "DB files already exist in volume. No action needed."
            fi
        volumeMounts:
        - name: wso2is-db-volume   # Mount the PVC into the init container
          mountPath: /mnt/db        # Mount it at a temporary path
      # ----------------------------------------------
      containers:
      - name: wso2is
        image: wso2/wso2is:7.0.0-alpine
        ports:
        - containerPort: 9453
          name: https
        - containerPort: 9773
          name: http
        volumeMounts:
        - name: wso2is-config-volume
          mountPath: /home/wso2carbon/wso2is-7.0.0/repository/conf/deployment.toml
          subPath: deployment.toml
        - name: wso2is-db-volume   # Main container mounts the SAME PVC
          # Mount at the final location WSO2 IS expects
          mountPath: /home/wso2carbon/wso2is-7.0.0/repository/database
      volumes:
      - name: wso2is-config-volume
        configMap:
          name: wso2is-config
      # # ------> REPLACE PVC WITH HOSTPATH <------
      # - name: wso2is-db-volume # Volume definition using hostPath
      #   hostPath:
      #     # IMPORTANT: Update this path to the directory YOU created on your Mac
      #     path: /Users/viggnah/Downloads/k8s-is-ikigai/database2
      #     # This ensures Kubernetes expects a directory at the host path
      #     type: DirectoryOrCreate
      # # -----------------------------------------
       # ------> ENSURE THIS USES PVC <------
      - name: wso2is-db-volume
        persistentVolumeClaim:
          claimName: wso2is-db-pvc # Must match the metadata.name in your PVC YAML